name: issue-add-to-parent-project

on:
  issues:
    types: 
      - edited
    labels:
      - 'type/question'
      
env:
  GITHUB_TOKEN: ${{ secrets.MIHAELA_PROJECTS_TOKEN }}
  ORGANIZATION: ${{ github.repository_owner }}
  REPO: ${{ github.event.repository.name }}
  PARENT_PROJECT: 313
    
jobs:
  add_to_parent_project:
    if: github.event.issue.number > 0
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue is already in board
        run: |
          gh api graphql -f query='
            query($org: String!, $repo: String!) {
              repository(name: $repo, owner: $org) {
                issue (number: ${{ github.event.issue.number }}) {
                  projectItems(first:20) {
                    nodes {
                      project {
                        number,
                        title
                      },
                      fieldValueByName(name:"Status") {
                        ... on ProjectV2ItemFieldSingleSelectValue {
                          optionId
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -f repo=$REPO > projects_data.json
            
            echo 'PROJECTS='$(jq '.data.repository.issue.projectItems.nodes[]' projects_data.json) >> $GITHUB_ENV
            echo 'PROJ_NO='$(jq '.data.repository.issue.projectItems.nodes[] | select(.project.number==316 or .project.number==312) | .project.number' projects_data.json) >> $GITHUB_ENV
            echo 'PROJ_STATUS='$(jq -r '.data.repository.issue.projectItems.nodes[] | select(.project.number==316 or .project.number==312) | select(.fieldValueByName != null) | .fieldValueByName.name' projects_data.json) >> $GITHUB_ENV
      - name: Get parent project project data
        if: env.PROJ_NO
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$PARENT_PROJECT > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'DATE_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Date posted") | .id' project_data.json) >> $GITHUB_ENV
          echo 'STATUS_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .id' project_data.json) >> $GITHUB_ENV
          echo 'TODO_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="Todo") |.id' project_data.json) >> $GITHUB_ENV
          echo 'PROGRESS_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="In Progress") |.id' project_data.json) >> $GITHUB_ENV
          echo 'DONE_OPTION_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="Done") |.id' project_data.json) >> $GITHUB_ENV
      - name: Set parent project status Done
        if: contains(env.PROJ_STATUS, 'Done')
        run: |
          echo 'ran Set Parent Project Status Done'
      - name: Set parent project status In Progress
        if: contains(env.PROJ_STATUS, 'In ') || contains(env.PROJ_STATUS, 'Blocked')
        run: |
          echo 'ran Set Parent Project Status In Progress'
      - name: Set parent project status To do
        if: env.PROJ_STATUS && !contains(env.PROJ_STATUS, 'In ') && !contains(env.PROJ_STATUS, 'Block    ed') && ! contains(env.PROJ_STATUS, 'Done')
        run: |
          echo 'ran Set Parent Project Status Todo'
